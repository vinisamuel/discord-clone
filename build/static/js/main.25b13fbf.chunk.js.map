{"version":3,"sources":["assets/Logo.svg","styles/GlobalStyles.ts","components/Layout/styles.ts","components/ServerButton/styles.ts","components/ServerButton/index.tsx","components/ServerList/styles.ts","components/ServerList/index.tsx","components/ServerName/styles.ts","components/ServerName/index.tsx","components/ChannelInfo/styles.ts","components/ChannelInfo/index.tsx","components/ChannelButton/styles.ts","components/ChannelButton/index.tsx","components/ChannelList/styles.ts","components/ChannelList/index.tsx","components/UserList/styles.ts","components/UserList/index.tsx","components/UserInfo/styles.ts","components/UserInfo/index.tsx","components/ChannelData/styles.ts","components/ChannelMessage/styles.ts","components/ChannelMessage/index.tsx","components/ChannelData/index.tsx","components/Layout/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","Grid","styled","div","Button","button","props","isHome","hasNotifications","mentions","ServerButton","selected","className","src","Logo","alt","Container","Separator","ServerList","Title","h1","ExpandIcon","ExpandMore","ServerName","HashtagIcon","Hashtag","Description","span","ChannelInfo","InviteIcon","PersonAdd","SettingsIcon","Settings","ChannelButton","channelName","Categoty","AddCategoryIcon","Add","ChannelList","Role","User","Avatar","UserRow","nickname","isBot","UserList","Profile","UserData","Icons","MicIcon","Mic","HeadphoneIcon","Headset","UserInfo","Messages","InputWrapper","Input","input","InputIcon","AlternateEmail","Message","Header","Content","Mention","ChannelMessage","author","date","content","hasMention","ChannelData","messagesRef","useRef","useEffect","current","scrollTop","scrollHeight","ref","Array","from","keys","map","n","key","type","placeholder","Layout","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25b13fbf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.207ba277.svg\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html, body, #root {\r\n        height: 100%;\r\n    }\r\n\r\n    *, button, input {\r\n        border: 0;\r\n        outline: 0;\r\n\r\n        font-family: 'Roboto', sans-serif;\r\n    }\r\n\r\n    :root {\r\n        --primary: #36393f;\r\n        --secondary: #2f3136;\r\n        --tertiary: rgb(32,34,37);\r\n        --quaternary: #292b2f;\r\n        --quinary: #393d42;\r\n        --senary: #828386;\r\n       \r\n        --white: #fff;\r\n        --gray: #8a8c90;\r\n        --chat-input: rgb(64,68,75);\r\n        --symbol: #74777a;\r\n     \r\n        --notification: #f84a4b;\r\n        --discord: #6e86d6;\r\n        --mention-detail: #f9a839;\r\n        --mention-message: #413f3f;\r\n     \r\n        --link: #5d80d6;\r\n     \r\n        --rocketseat: #6633cc;\r\n      }\r\n\r\n`;","import styled from 'styled-components';\r\n\r\n// SL - Server List\r\n// SN - Server Name\r\n// CI - Channel Info\r\n// CL - Channel List\r\n// CD - Channel Data\r\n// UL - User List\r\n// UI - User Info\r\n\r\nexport const Grid = styled.div`\r\n    display: grid;\r\n\r\n    grid-template-columns: 71px 240px auto 240px;\r\n    grid-template-rows: 46px auto 52px;\r\n    \r\n    grid-template-areas: \r\n        'SL SN CI CI'\r\n        'SL CL CD UL'\r\n        'SL UI CD UL';\r\n\r\n    height: 100vh;\r\n  \r\n`;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nimport { Props } from '.';\r\n\r\nexport const Button = styled.button<Props>`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-shrink: 0;\r\n\r\n    width: 48px;\r\n    height: 48px;\r\n    border-radius: 50%;\r\n\r\n    margin-bottom: 8px;\r\n\r\n    background-color: ${(props) => props.isHome ? 'var(--rocketseat)' : 'var(--primary)'};\r\n\r\n    position: relative;\r\n    cursor: pointer;\r\n\r\n    > img {\r\n        width: 24px;\r\n        height: 24px;\r\n    }\r\n\r\n    &::before {\r\n        width: 9px;\r\n        height: 9px;\r\n\r\n        position: absolute;\r\n        left: -17px;\r\n        top: calc(50% - 4.5px);\r\n\r\n        background-color: var(--white);\r\n        border-radius: 50%;\r\n\r\n        content: '';\r\n        display: ${(props) => props.hasNotifications ? 'inline' : 'none'};\r\n    }\r\n\r\n    &::after {\r\n        background-color: var(--notification);\r\n        width: auto;\r\n        height: 16px;\r\n\r\n        padding: 0 4px;\r\n\r\n        position: absolute;\r\n        bottom: -4px;\r\n        right: -4px;\r\n\r\n        border-radius: 12px;\r\n        border: 4px solid var(--quaternary);\r\n\r\n        text-align: right;\r\n        font-size: 13px;\r\n        font-weight: bold;\r\n        color: var(--white);\r\n\r\n        content: '${(props) => props.mentions && props.mentions}';\r\n        display: ${(props) => props.mentions && props.mentions > 0 ? 'inline' : 'none'};\r\n    }\r\n\r\n    transition: border-radius .2s, background-color .2s;\r\n\r\n    &.active, \r\n    &:hover {\r\n        border-radius: 16px;\r\n        background-color: ${(props) => props.isHome ? 'var(--rocketseat)' : 'var(--discord)'};\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport Logo from '../../assets/Logo.svg';\r\n\r\nimport { Button } from './styles';\r\n\r\nexport interface Props {\r\n    selected?: boolean;\r\n    isHome?: boolean;\r\n    hasNotifications?: boolean;\r\n    mentions?: number;\r\n}\r\n\r\nconst ServerButton: React.FC<Props> = ({\r\n    selected,\r\n    isHome,\r\n    hasNotifications,\r\n    mentions\r\n}) => {\r\n    return (\r\n        <Button\r\n            isHome={isHome}\r\n            hasNotifications={hasNotifications}\r\n            mentions={mentions}\r\n            className={selected ?  'active' : ''}\r\n        >\r\n            {isHome && <img src={Logo} alt=\"Rocketseat\" />}\r\n        </Button>\r\n    )\r\n};\r\n\r\nexport default ServerButton;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    grid-area: SL;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    background-color: var(--tertiary);\r\n    padding: 11px 0;\r\n\r\n    max-height: 100vh;\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n    width: 32px;\r\n    border-bottom: 2px solid var(--quaternary);\r\n\r\n    margin-bottom: 8px;\r\n\r\n`;","import React from 'react';\r\n\r\nimport ServerButton from '../ServerButton';\r\n\r\nimport { Container, Separator } from './styles';\r\n\r\nconst ServerList: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <ServerButton isHome />\r\n            \r\n            <Separator />\r\n            \r\n            <ServerButton />\r\n            <ServerButton hasNotifications />\r\n            <ServerButton mentions={3} />\r\n            <ServerButton />\r\n            <ServerButton />\r\n            <ServerButton mentions={20} />\r\n            <ServerButton hasNotifications />\r\n            <ServerButton />\r\n            <ServerButton />\r\n            <ServerButton hasNotifications />\r\n            <ServerButton />\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ServerList;","import styled from 'styled-components';\r\n\r\nimport { ExpandMore } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    padding: 0 11px 0 16px;\r\n    background-color: var(--secondary);\r\n\r\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n    z-index: 2;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n\r\n    color: var(--white);\r\n`;\r\n\r\nexport const ExpandIcon = styled(ExpandMore)`\r\n    width: 28px;\r\n    height: 28px;\r\n\r\n    color: var(--white);\r\n    cursor: pointer;\r\n`;\r\n\r\n","import React from 'react';\r\n\r\nimport { Container, Title, ExpandIcon } from './styles';\r\n\r\nconst ServerName: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <Title>Servidor do Vinicius</Title>\r\n\r\n            <ExpandIcon />\r\n        </Container>\r\n    );\r\n};\r\n    \r\nexport default ServerName;","import styled from 'styled-components';\r\n\r\nimport { Hashtag } from 'styled-icons/heroicons-outline';\r\n\r\nexport const Container = styled.div`\r\n    grid-area: CI;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    padding: 0 17px;\r\n    background-color: var(--primary);\r\n\r\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n    z-index: 2;\r\n`;\r\n\r\nexport const HashtagIcon = styled(Hashtag)`\r\n    width: 24px;\r\n    height: 24px;\r\n\r\n    color: var(--symbol);\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    margin-left: 9px;\r\n\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n\r\n    color: var(--white);\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n    height: 24px;\r\n    width: 1px;\r\n\r\n    background-color: var(--white);\r\n    opacity: 0.2;\r\n\r\n    margin: 0 13px;\r\n`;\r\n\r\nexport const Description = styled.span`\r\n    font-size: 15px;\r\n    color: var(--gray);\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Container, HashtagIcon, Title, Separator, Description } from './styles';\r\n\r\nconst ChannelInfo: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <HashtagIcon />\r\n\r\n            <Title>chat-livre</Title>\r\n\r\n            <Separator />\r\n\r\n            <Description>Canal aberto para conversas</Description>\r\n        </Container>\r\n    );\r\n};\r\n    \r\nexport default ChannelInfo;","import styled from 'styled-components';\r\nimport { Hashtag } from 'styled-icons/heroicons-outline';\r\nimport { PersonAdd, Settings } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    cursor: pointer;\r\n\r\n    padding: 5px 3px;\r\n    barder-radius: 5px;\r\n\r\n    background-color: transparent;\r\n\r\n    transition: background-color 0.2s;\r\n\r\n    > div {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    > div span {\r\n        margin-left: 5px;\r\n        color: var(--senary);\r\n    }\r\n\r\n    &:hover, \r\n    &.active {\r\n        background-color: var(--quinary);\r\n\r\n        > div span {\r\n            color: var(--white);\r\n        }\r\n    }\r\n\r\n    // Desafio: fazer os icones PersonAdd e Settings aparecer somente quando o usuário passar o mouse por cima, caso contrário esconder.\r\n`;\r\n\r\nexport const HashtagIcon = styled(Hashtag)`\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    color: var(--symbol);\r\n`;\r\n\r\nexport const InviteIcon = styled(PersonAdd)`\r\n    width: 16px;\r\n    height: 16px;\r\n\r\n    color: var(--symbol);\r\n    cursor: pointer;\r\n\r\n    transition: color 0.2s;\r\n\r\n    &:hover {\r\n        color: var(--white);\r\n    }\r\n`;\r\n\r\nexport const SettingsIcon = styled(Settings)`\r\n    width: 16px;\r\n    height: 16px;\r\n\r\n    margin-left: 4px;\r\n\r\n    color: var(--symbol);\r\n    cursor: pointer;\r\n\r\n    transition: color 0.2s;\r\n\r\n    &:hover {\r\n        color: var(--white);\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport { Container, HashtagIcon, InviteIcon, SettingsIcon } from './styles';\r\n\r\nexport interface Props {\r\n    channelName: string;\r\n    selected?: boolean;\r\n}\r\n\r\nconst ChannelButton: React.FC<Props> = ({ channelName, selected }) => {\r\n    return (\r\n        <Container className={selected ? 'active' : ''}> \r\n            <div>\r\n                <HashtagIcon />\r\n                <span>{channelName}</span>\r\n            </div>\r\n\r\n            <div>\r\n                <InviteIcon />\r\n                <SettingsIcon />\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n    \r\nexport default ChannelButton;","import styled from 'styled-components';\r\nimport { Add } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n    grid-area: CL;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    padding: 24px 9.5px 0 16px;\r\n    background-color: var(--secondary);\r\n`;\r\n\r\nexport const Categoty = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    margin-bottom: 6px;\r\n\r\n    > span {\r\n        text-transform: uppercase;\r\n        font-size: 12px;\r\n        font-weight: 500;\r\n        color: var(--gray);\r\n    }\r\n`;\r\n\r\nexport const AddCategoryIcon = styled(Add)`\r\n    width: 21px;\r\n    height: 21px;\r\n\r\n    color: var(--symbol);\r\n    \r\n    cursor: pointer;\r\n`;","import React from 'react';\r\n\r\nimport ChannelButton from '../ChannelButton';\r\n\r\nimport { Container, Categoty, AddCategoryIcon } from './styles';\r\n\r\nconst ChannelList: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <Categoty>\r\n                <span>Canais de Texto</span>\r\n                <AddCategoryIcon />\r\n            </Categoty>\r\n\r\n            <ChannelButton channelName=\"chat-livre\" />\r\n            <ChannelButton channelName=\"trabalho\" />\r\n            <ChannelButton channelName=\"lolzinho\" />\r\n            <ChannelButton channelName=\"csgo\" />\r\n            <ChannelButton channelName=\"valorant\" />\r\n        </Container>\r\n    );\r\n};\r\n    \r\nexport default ChannelList;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    grid-area: UL;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    padding: 3px 6px 0 16px;\r\n    background-color: var(--secondary);\r\n\r\n    max-height: calc(100vh - 46px);\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 4px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: var(--tertiary);\r\n        border-radius: 4px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: var(--secondary);\r\n    }\r\n`;\r\n\r\nexport const Role = styled.span`\r\n    margin-top: 20px;\r\n\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    color: var(--gray);\r\n`;\r\n\r\nexport const User = styled.div`\r\n    margin-top: 5px;\r\n    padding: 5px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    cursor: pointer;\r\n\r\n    border-radius: 4px;\r\n    background: transparent:\r\n\r\n    transition: background 0.2s;\r\n\r\n    &:hover {\r\n        background-color: rgba(255, 255, 255, 0.1);\r\n    }\r\n\r\n    > strong {\r\n        margin-left: 13px;\r\n        font-weight: 500;\r\n        color: var(--white);\r\n        opacity: 0.7;\r\n\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n    }\r\n\r\n    > span {\r\n        margin-left: 9px;\r\n\r\n        background-color: var(--discord);\r\n        color: var(--white);\r\n        border-radius: 4px;\r\n        padding: 4px 5px;\r\n\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        font-size: 11px;\r\n    }\r\n\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n    flex-shrink: 0;\r\n\r\n    width: 32px;\r\n    height: 32px;\r\n\r\n    border-radius: 50%;\r\n    background-color: var(--primary);\r\n\r\n    &.bot {\r\n        background-color: var(--mention-detail);\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport { Container, Role, User, Avatar } from './styles';\r\n\r\ninterface UserProps {\r\n    nickname: string;\r\n    isBot?: boolean;\r\n}\r\n\r\nconst UserRow: React.FC<UserProps> = ({ nickname, isBot }) => {\r\n    return (\r\n        <User>\r\n            <Avatar className={isBot ? 'bot' : ''} />\r\n\r\n            <strong>{nickname}</strong>\r\n\r\n            {isBot && <span>Bot</span>}\r\n        </User>\r\n    );\r\n}\r\n\r\nconst UserList: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <Role>Disponível - 1</Role>\r\n            <UserRow nickname=\"Vinicius Samuel\" />\r\n\r\n            <Role>Offline - 1</Role>\r\n            <UserRow nickname=\"João Fernandes da Silva\" isBot />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n            <UserRow nickname=\"Fulano\" />\r\n        </Container>\r\n    );\r\n};\r\n    \r\nexport default UserList;","import styled from 'styled-components';\r\nimport { Mic, Headset, Settings } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n    grid-area: UI;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    padding: 10px;\r\n    background-color: var(--quaternary);\r\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n`;\r\n\r\nexport const Profile = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 50%;\r\n\r\n    background-color: var(--gray);\r\n`;\r\n\r\nexport const UserData = styled.div`\r\n    margin-left: 8px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    > strong {\r\n        color: var(--white);\r\n        font-size: 13px;\r\n        display: block;\r\n    }\r\n\r\n    > span {\r\n        color: var(--gray);\r\n        font-size: 13px;\r\n    }\r\n`;\r\n\r\nexport const Icons = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    > svg:not(:first-child) {\r\n        margin-left: 7px;\r\n    }\r\n`;\r\n\r\nexport const MicIcon = styled(Mic)`\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    color: var(--white);\r\n    opacity: 0.7;\r\n    cursor: pointer;\r\n\r\n    transition: opacity 0.2s;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nexport const HeadphoneIcon = styled(Headset)`\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    color: var(--white);\r\n    opacity: 0.7;\r\n    cursor: pointer;\r\n\r\n    transition: opacity 0.2s;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nexport const SettingsIcon = styled(Settings)`\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    color: var(--white);\r\n    opacity: 0.7;\r\n    cursor: pointer;\r\n\r\n    transition: opacity 0.2s;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport { \r\n    Container,\r\n    Profile,\r\n    Avatar,\r\n    UserData,\r\n    Icons,\r\n    MicIcon,\r\n    HeadphoneIcon,\r\n    SettingsIcon  \r\n} from './styles';\r\n\r\nconst UserInfo: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <Profile>\r\n                <Avatar />\r\n                <UserData>\r\n                    <strong>Vinicius Samuel</strong>\r\n                    <span>#3687</span>\r\n                </UserData>\r\n            </Profile>\r\n\r\n            <Icons>\r\n                <MicIcon />\r\n                <HeadphoneIcon />\r\n                <SettingsIcon />\r\n            </Icons>\r\n        </Container>\r\n    );\r\n};\r\n    \r\nexport default UserInfo;","import styled from 'styled-components';\r\n\r\nimport { AlternateEmail } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n    grid-area: CD;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n\r\n    background-color: var(--primary);\r\n`;\r\n\r\nexport const Messages = styled.div`\r\n    padding: 20px 0;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    max-height: calc(100vh - 46px - 68px);\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 8px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: var(--tertiary);\r\n        border-radius: 4px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: var(--secondary);\r\n    }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n    width: 100%;\r\n\r\n    padding: 0 16px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    width: 100%;\r\n    height: 44px;\r\n\r\n    padding: 0 10px 0 57px;\r\n    border-radius: 7px;\r\n\r\n    color: var(--white);\r\n    background-color: var(--chat-input);\r\n\r\n    position: relative;\r\n\r\n    &::placeholder {\r\n        color: var(--gray);\r\n    }\r\n\r\n    ~ svg {\r\n        position: relative;\r\n        top: -50%;\r\n        left: 14px;\r\n        transition: 180ms ease-in-out;\r\n    }\r\n`;\r\n\r\nexport const InputIcon = styled(AlternateEmail)`\r\n    width: 24px;\r\n    height: 24px;\r\n\r\n    color: var(--gray);\r\n\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n\r\n    padding: 4px 16px;\r\n    margin-right: 4px;\r\n\r\n    background-color: transparent;\r\n\r\n    &.mention {\r\n        background-color: var(--mention-message);\r\n\r\n        border-left: 2px solid var(--mention-detail);\r\n        padding-left: 14px;\r\n    }\r\n\r\n    & + div {\r\n        margin-top: 13px;\r\n    }    \r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n    width: 40px;\r\n    height: 40px;\r\n\r\n    background-color: var(--secondary);\r\n    border-radius: 50%;\r\n\r\n    position:relative;\r\n    top: 0;\r\n\r\n    &.bot {\r\n        background-color: var(--mention-detail);\r\n    }\r\n`;\r\n\r\nexport const Message = styled.div`\r\n    min-height: 40px;\r\n    max-width: calc(100% - 16px - 40px - 17px);\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n\r\n    margin-left: 17px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    > strong {\r\n        color: var(--white);\r\n        font-size: 16px;\r\n    }\r\n\r\n    > span {\r\n        margin-left: 6px;\r\n\r\n        background-color: var(--discord);\r\n        color: var(--white);\r\n        border-radius: 4px;\r\n        padding: 4px 5px;\r\n\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        font-size: 11px;\r\n    }\r\n\r\n    > time {\r\n        margin-left: 6px;\r\n        color: var(--gray);\r\n        font-size: 13px;\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    text-align: left;\r\n    font-size: 16px;\r\n    color: var(--white);\r\n`;\r\n\r\nexport const Mention = styled.span`\r\n    color: var(--link);\r\n    cursor: pointer;\r\n    \r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport { Container, Avatar, Message, Header, Content } from './styles';\r\n\r\nexport { Mention } from './styles';\r\n\r\nexport interface Props {\r\n    author: string;\r\n    date: string;\r\n    content: string | React.ReactElement | React.ReactNode;\r\n    hasMention?: boolean;\r\n    isBot?: boolean;\r\n}\r\n\r\nconst ChannelMessage: React.FC<Props> = ({\r\n    author,\r\n    date,\r\n    content,\r\n    hasMention,\r\n    isBot\r\n}) => {\r\n    return (\r\n        <Container className={hasMention ? 'mention' : ''}>\r\n            <div>\r\n                <Avatar className={isBot ? 'bot' : ''} />\r\n            </div>\r\n\r\n            <Message>\r\n                <Header>\r\n                    <strong>{author}</strong>\r\n\r\n                    {isBot && <span>Bot</span>}\r\n\r\n                    <time>{date}</time>\r\n                </Header>\r\n                <Content>{content}</Content>\r\n            </Message>\r\n        </Container>\r\n    );\r\n};\r\n    \r\nexport default ChannelMessage;","import React, { useRef, useEffect } from 'react';\r\n\r\nimport { Container, Messages, InputWrapper, Input, InputIcon } from './styles';\r\n\r\nimport ChannelMessage, { Mention } from '../ChannelMessage';\r\n\r\nconst ChannelData: React.FC = () => {\r\n    const messagesRef = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\r\n    useEffect(() => {\r\n        const div = messagesRef.current;\r\n\r\n        if (div) {\r\n            div.scrollTop = div.scrollHeight;\r\n        }\r\n    }, [messagesRef]);\r\n\r\n    return (\r\n        <Container>\r\n            <Messages ref={messagesRef}>\r\n                {Array.from(Array(15).keys()).map((n) => (\r\n                    <ChannelMessage\r\n                        key={n}\r\n                        author=\"Vinicius Samuel\"\r\n                        date=\"12/12/2020\"\r\n                        content=\"Hoje é o meu aniversário!\"\r\n                    />\r\n                ))}\r\n\r\n                <ChannelMessage\r\n                    author=\"Guilherme Rodz\"\r\n                    date=\"12/12/2020\"\r\n                    content={\r\n                        <>\r\n                            <Mention>@Vinicius Samuel</Mention>, me carrega no LoL e CS de novo por favor?\r\n                        </>\r\n                    }\r\n                    hasMention\r\n                    isBot\r\n                />\r\n\r\n                <ChannelMessage\r\n                    author=\"João Paulo\"\r\n                    date=\"12/12/2020\"\r\n                    content=\"But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\"\r\n                />\r\n            </Messages>\r\n\r\n\r\n            <InputWrapper>\r\n                <Input type=\"text\" placeholder=\"Conversar em #chat-livre\" />\r\n                <InputIcon />\r\n            </InputWrapper>\r\n        </Container>\r\n    );\r\n};\r\n    \r\nexport default ChannelData;","import React from 'react';\r\n\r\nimport { Grid } from './styles';\r\n\r\nimport ServerList from '../ServerList';\r\nimport ServerName from '../ServerName';\r\nimport ChannelInfo from '../ChannelInfo';\r\nimport ChannelList from '../ChannelList';\r\nimport UserList from '../UserList';\r\nimport UserInfo from '../UserInfo';\r\nimport ChannelData from '../ChannelData';\r\n\r\nconst Layout: React.FC = () => {\r\n    return (\r\n        <Grid>\r\n            <ServerList />\r\n            <ServerName />\r\n            <ChannelInfo />\r\n            <ChannelList />\r\n            <UserInfo />\r\n            <ChannelData />\r\n            <UserList />\r\n        </Grid>\r\n    );\r\n};\r\n    \r\nexport default Layout;","import React from 'react';\r\n\r\nimport GlobalStyles from './styles/GlobalStyles';\r\nimport Layout from './components/Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Layout /> \r\n\r\n      <GlobalStyles />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}